{"version":3,"sources":["components/Note.js","components/Notification.js","components/Footer.js","components/AddNote.js","services/notes.js","App.js","index.js"],"names":["Note","note","toggleImportance","label","important","className","content","onClick","Notification","message","Footer","style","color","fontStyle","fontSize","AddNote","setNewNote","addNote","newNote","type","value","onChange","e","target","handleChange","baseUrl","axios","get","then","response","data","newObject","post","id","put","App","useState","notes","setNotes","errorMessage","setErrorMessage","useEffect","noteService","initialNotes","copy","JSON","parse","stringify","console","log","map","find","n","changedNote","returnedNote","catch","error","setTimeout","filter","toggleImportanceOf","event","preventDefault","noteObject","date","Date","toISOString","Math","random","concat","ReactDOM","render","document","getElementById"],"mappings":"4KAaeA,EAXF,SAAC,GAAgC,IAA9BC,EAA6B,EAA7BA,KAAMC,EAAuB,EAAvBA,iBACZC,EAAQF,EAAKG,UACb,qBAAuB,iBAC7B,OACI,qBAAIC,UAAU,OAAd,UACKJ,EAAKK,QACN,wBAAQC,QAASL,EAAjB,SAAoCC,QCIjCK,EAZM,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACpB,OAAgB,OAAZA,EACO,KAIP,qBAAKJ,UAAU,QAAf,SACKI,KCQEC,EAfA,WAOX,OACI,sBAAKC,MAPW,CAChBC,MAAO,QACPC,UAAW,SACXC,SAAU,IAIV,UACI,uBACA,2GCMGC,EAdC,SAAC,GAAsC,IAApCC,EAAmC,EAAnCA,WAAYC,EAAuB,EAAvBA,QAASC,EAAc,EAAdA,QAMpC,OACI,gCACI,uBAAOC,KAAK,OAAOC,MAAOF,EAASG,SAAU,SAAAC,GAAC,OANjC,SAACA,GAClBN,EAAWM,EAAEC,OAAOH,OAKkCI,CAAaF,MAC/D,wBAAQf,QAASU,EAAjB,sB,gBCTNQ,EAAU,YAkBD,EAhBA,WAEX,OADgBC,IAAMC,IAAIF,GACXG,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SAc9B,EAXA,SAAAC,GAEX,OADgBL,IAAMM,KAAKP,EAASM,GACrBH,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SAS9B,EALA,SAACG,EAAIF,GAEhB,OADgBL,IAAMQ,IAAN,UAAaT,EAAb,YAAwBQ,GAAMF,GAC/BH,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SCyD9BK,EAlEH,WAAO,IAAD,EACYC,qBADZ,mBACPC,EADO,KACAC,EADA,OAEgBF,mBAAS,IAFzB,mBAEPlB,EAFO,KAEEF,EAFF,OAG0BoB,mBAAS,MAHnC,mBAGPG,EAHO,KAGOC,EAHP,KAKdC,qBAAU,WACNC,IAEKd,MAAK,SAAAe,GACF,IAAIC,EAAOC,KAAKC,MAAMD,KAAKE,UAAUJ,IAErC,OADAL,EAASM,GACFA,OAEhB,IAoCH,OADAI,QAAQC,IAAIZ,GAER,gCACI,uCACA,cAAC,EAAD,CAAc5B,QAAS8B,IACtBF,GACG,6BACKA,EAAMa,KAAI,SAAAjD,GAAI,OACX,cAAC,EAAD,CAAoBA,KAAMA,EAAMC,iBAAkB,kBAzC3C,SAAC+B,GACxB,IAAMhC,EAAOoC,EAAMc,MAAK,SAAAC,GAAC,OAAIA,EAAEnB,KAAOA,KAChCoB,EAAW,2BAAQpD,GAAR,IAAcG,WAAYH,EAAKG,YAChDsC,EACYT,EAAIoB,GACXzB,MAAK,SAAA0B,GACFhB,EAASD,EAAMa,KAAI,SAAAjD,GAAI,OAAIA,EAAKgC,KAAOA,EAAKhC,EAAOqD,SAEtDC,OAAM,SAAAC,GACHhB,EAAgB,SAAD,OACFvC,EAAKK,QADH,sCAGfmD,YAAW,WACPjB,EAAgB,QACjB,KACHF,EAASD,EAAMqB,QAAO,SAAAN,GAAC,OAAIA,EAAEnB,KAAOA,SA0B4B0B,CAAmB1D,EAAKgC,MAArEhC,EAAKgC,SAI5B,cAAC,EAAD,CAASjB,WAAYA,EAAYC,QA1BzB,SAAA2C,GACZA,EAAMC,iBACN,IAAMC,EAAa,CACfxD,QAASY,EACT6C,MAAM,IAAIC,MAAOC,cACjB7D,UAAW8D,KAAKC,SAAW,IAE/BzB,EACYoB,GACPlC,MAAK,SAAA0B,GACFhB,EAASD,EAAM+B,OAAOd,IACtBtC,EAAW,QAeoCE,QAASA,IAC5D,cAAC,EAAD,Q,MChEZmD,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.361fa51b.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst Note = ({ note, toggleImportance }) => {\r\n    const label = note.important\r\n        ? 'make not important' : 'make important'\r\n    return (\r\n        <li className='note'>\r\n            {note.content}\r\n            <button onClick={toggleImportance}>{label}</button>\r\n        </li>\r\n    )\r\n}\r\n\r\nexport default Note","const Notification = ({ message }) => {\r\n    if (message === null) {\r\n        return null\r\n    }\r\n\r\n    return (\r\n        <div className=\"error\">\r\n            {message}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Notification\r\n","const Footer = () => {\r\n    const footerStyle = {\r\n        color: 'green',\r\n        fontStyle: 'italic',\r\n        fontSize: 16\r\n    }\r\n\r\n    return (\r\n        <div style={footerStyle}>\r\n            <br />\r\n            <em>Note app, Department of Computer Science, University of Helsinki 2020</em>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Footer","import React from 'react';\r\n\r\nconst AddNote = ({ setNewNote, addNote, newNote }) => {\r\n\r\n    const handleChange = (e) => {\r\n        setNewNote(e.target.value);\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <input type=\"text\" value={newNote} onChange={e => handleChange(e)}></input>\r\n            <button onClick={addNote}>save</button>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default AddNote;","/* eslint-disable import/no-anonymous-default-export */\r\nimport axios from 'axios'\r\nconst baseUrl = 'api/notes'\r\n\r\nconst getAll = () => {\r\n    const request = axios.get(baseUrl)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nconst create = newObject => {\r\n    const request = axios.post(baseUrl, newObject)\r\n    return request.then(response => response.data)\r\n\r\n}\r\n\r\nconst update = (id, newObject) => {\r\n    const request = axios.put(`${baseUrl}/${id}`, newObject)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nexport default { getAll, create, update }","import React, { useState, useEffect } from 'react'\r\nimport Note from './components/Note'\r\nimport Notification from './components/Notification'\r\nimport Footer from './components/Footer'\r\nimport AddNote from './components/AddNote'\r\n\r\nimport noteService from './services/notes'\r\n\r\nconst App = () => {\r\n    const [notes, setNotes] = useState()\r\n    const [newNote, setNewNote] = useState('')\r\n    const [errorMessage, setErrorMessage] = useState(null)\r\n\r\n    useEffect(() => {\r\n        noteService\r\n            .getAll()\r\n            .then(initialNotes => {\r\n                let copy = JSON.parse(JSON.stringify(initialNotes));\r\n                setNotes(copy)\r\n                return copy\r\n            })\r\n    }, [])\r\n\r\n    const toggleImportanceOf = (id) => {\r\n        const note = notes.find(n => n.id === id)\r\n        const changedNote = { ...note, important: !note.important }\r\n        noteService\r\n            .update(id, changedNote)\r\n            .then(returnedNote => {\r\n                setNotes(notes.map(note => note.id !== id ? note : returnedNote))\r\n            })\r\n            .catch(error => {\r\n                setErrorMessage(\r\n                    `Note '${note.content}' was already deleted from server`\r\n                )\r\n                setTimeout(() => {\r\n                    setErrorMessage(null)\r\n                }, 5000)\r\n                setNotes(notes.filter(n => n.id !== id))\r\n            })\r\n    }\r\n\r\n    const addNote = event => {\r\n        event.preventDefault()\r\n        const noteObject = {\r\n            content: newNote,\r\n            date: new Date().toISOString(),\r\n            important: Math.random() > 0.5,\r\n        }\r\n        noteService\r\n            .create(noteObject)\r\n            .then(returnedNote => {\r\n                setNotes(notes.concat(returnedNote))\r\n                setNewNote('')\r\n            })\r\n    }\r\n    console.log(notes)\r\n    return (\r\n        <div>\r\n            <h1>Notes</h1>\r\n            <Notification message={errorMessage} />\r\n            {notes && (\r\n                <ul>\r\n                    {notes.map(note =>\r\n                        <Note key={note.id} note={note} toggleImportance={() => toggleImportanceOf(note.id)} />\r\n                    )}\r\n                </ul>\r\n            )}\r\n            <AddNote setNewNote={setNewNote} addNote={addNote} newNote={newNote} />\r\n            <Footer />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default App","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport './index.css'\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n)"],"sourceRoot":""}