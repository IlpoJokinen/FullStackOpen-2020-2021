{"version":3,"sources":["services/persons.js","components/Filter.js","components/Contact.js","components/Contacts.js","components/ContactForm.js","components/Notification.js","App.js","utils/utils.js","index.js"],"names":["baseUrl","axios","get","then","response","data","newObject","post","id","delete","person","newNumber","changedPerson","number","put","Filter","props","value","searchWord","type","placeholder","onChange","callback","Contact","name","removePerson","onClick","Contacts","persons","index","FilteredPerson","map","toLowerCase","includes","ContactForm","newName","handleChange","numberInput","handleNumber","addPerson","Notification","message","status","className","classname","App","useState","setPersons","setNewName","setNumberInput","setWord","errorMsg","setErrorMsg","useEffect","personService","initialPersons","handleErrorMessage","setTimeout","e","preventDefault","target","style","height","removedPerson","find","window","confirm","removedPersonId","newPersonArray","filter","numberInPhonebook","some","nameInPhonebook","updatedPerson","length","returnedPerson","catch","error","updatePersonsNumber","newPerson","concat","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.099ec612.chunk.js","sourcesContent":["import axios from 'axios'\r\nconst baseUrl = 'api/persons'\r\n\r\nconst getAll = () => {\r\n    const request = axios.get(baseUrl)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nconst create = newObject => {\r\n    const request = axios.post(baseUrl, newObject)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nconst remove = id => {\r\n    axios.delete(`${baseUrl}/${id}`)\r\n    return id\r\n}\r\n\r\nconst update = (person, newNumber) => {\r\n    const changedPerson = { ...person, number: newNumber }\r\n    const request = axios.put(`${baseUrl}/${person.id}`, changedPerson)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nexport default { getAll, create, remove, update }","import React from 'react'\r\n\r\nconst Filter = (props) => {\r\n    return (\r\n        <div>\r\n            Search by name or number\r\n            <input value={props.searchWord} type = \"text\" placeholder = \"Search...\"\r\n            onChange = {props.callback} /> \r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n  export default Filter","import React from 'react'\r\n\r\nconst Contact = ({ name, number, id, removePerson }) => {\r\n\r\n    return (\r\n        <tr>\r\n            <td>{name}</td>\r\n            <td>{number}</td>\r\n            <td><button onClick={() => removePerson(id)}>delete</button></td>\r\n        </tr>\r\n    )\r\n}\r\n\r\nexport default Contact","import React from 'react'\r\nimport Contact from './Contact'\r\n\r\nconst Contacts = ({ persons, searchWord, removePerson }) => {\r\n\r\n    let index = 0\r\n\r\n    const FilteredPerson = persons.map(person => {\r\n        index++\r\n        if (person.name.toLowerCase().includes(searchWord.toLowerCase())) {\r\n            return <Contact\r\n                key={person.id}\r\n                name={person.name}\r\n                number={person.number}\r\n                id={person.id}\r\n                removePerson={removePerson}\r\n            />\r\n        }\r\n    })\r\n\r\n    return (\r\n        <table>\r\n            <tbody key={index}>\r\n                {FilteredPerson}\r\n            </tbody>\r\n        </table>\r\n    )\r\n\r\n}\r\n\r\nexport default Contacts","import React from 'react'\r\n\r\nconst ContactForm = ({ newName, handleChange, numberInput, handleNumber, addPerson }) => {\r\n    return (\r\n        <div>\r\n            <h2>add new contact</h2>\r\n            name: <input value={newName} onChange={handleChange} />\r\n            number: <input value={numberInput || ''} onChange={handleNumber} />\r\n            <button type=\"submit\" onClick={addPerson}>add</button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ContactForm","const Notification = ({ message, status }) => {\r\n    if (message === null) {\r\n        return null\r\n    }\r\n\r\n    const classname = (status) => {\r\n        let className\r\n        switch (status) {\r\n            case 'create':\r\n                className = 'success'\r\n                return className\r\n            case 'update':\r\n                className = 'success'\r\n                return className\r\n            case 'delete':\r\n                className = 'alert'\r\n                return className\r\n            case 'failure':\r\n                className = 'alert'\r\n                return className\r\n            default:\r\n                return className\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className={classname(status)}>\r\n            {message}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Notification","import React, { useState, useEffect } from 'react'\r\n\r\nimport { updatePersonsNumber } from './utils/utils'\r\nimport personService from './services/persons'\r\n\r\nimport Filter from './components/Filter'\r\nimport Contacts from './components/Contacts'\r\nimport ContactForm from './components/ContactForm'\r\nimport Notification from './components/Notification'\r\n\r\nconst App = () => {\r\n  const [persons, setPersons] = useState([])\r\n  const [newName, setNewName] = useState('')\r\n  const [numberInput, setNumberInput] = useState('')\r\n  const [searchWord, setWord] = useState('')\r\n  const [errorMsg, setErrorMsg] = useState(null)\r\n\r\n  useEffect(() => {\r\n    personService\r\n      .getAll()\r\n      .then(initialPersons => {\r\n        setPersons(initialPersons)\r\n      })\r\n  }, [])\r\n\r\n  const searchWordChanged = (e) => {\r\n    e.preventDefault()\r\n    setWord(e.target.value)\r\n  }\r\n\r\n  const handleNumber = (e) => {\r\n    e.preventDefault()\r\n    setNumberInput(e.target.value)\r\n  }\r\n\r\n  const handleChange = (e) => {\r\n    e.preventDefault()\r\n    setNewName(e.target.value)\r\n  }\r\n\r\n  const handleErrorMessage = (message, status) => {\r\n    setErrorMsg({ message: message, status: status })\r\n    setTimeout(() => {\r\n      setErrorMsg(null)\r\n    }, 5000)\r\n  };\r\n\r\n  const addPerson = (e) => {\r\n    e.preventDefault()\r\n    const numberInPhonebook = persons.some(person => person.number === numberInput)\r\n    const nameInPhonebook = persons.some(person => person.name === newName)\r\n    if (numberInPhonebook) {\r\n      handleErrorMessage('Given phonenumber is already in the phonebook', 'failure')\r\n      setNumberInput('')\r\n      return numberInPhonebook\r\n    }\r\n    if (nameInPhonebook) {\r\n      const updatedPerson = persons.find(person => person.name === newName)\r\n      updatePersonsNumber(updatedPerson, numberInput, persons, setPersons, setErrorMsg)\r\n      return nameInPhonebook\r\n    }\r\n    personService\r\n      .create({ name: newName, number: numberInput })\r\n      .then(newPerson => {\r\n        setPersons(persons.concat(newPerson))\r\n      })\r\n      .catch(error => {\r\n        const errorMsg = error.response.data.error\r\n        handleErrorMessage(errorMsg, 'failure')\r\n      })\r\n    handleErrorMessage(`${newName} was added to the phonebook`, 'create')\r\n  }\r\n\r\n  const removePerson = id => {\r\n    const removedPerson = persons.find(person => person.id === id)\r\n    const proceedToDelete = window.confirm(`Delete ${removedPerson.name} ?`)\r\n    if (proceedToDelete) {\r\n      const removedPersonId = personService.remove(id)\r\n      const newPersonArray = persons.filter(person => person.id !== removedPersonId)\r\n      setPersons(newPersonArray)\r\n      setErrorMsg({ message: `Person ${removedPerson.name} was removed`, status: 'delete' })\r\n      setTimeout(() => {\r\n        setErrorMsg(null)\r\n      }, 5000)\r\n    } else {\r\n      return\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <h2>Phonebook</h2>\r\n      {errorMsg && (\r\n        <Notification message={errorMsg.message} status={errorMsg.status} />\r\n      )}\r\n      <Filter searchWord={searchWord} callback={searchWordChanged} />\r\n      <div style={{ height: 30 }} />\r\n      <Contacts persons={persons} searchWord={searchWord} removePerson={removePerson} />\r\n      <div style={{ height: 30 }} />\r\n      <ContactForm name={newName} handleNumber={handleNumber} handleChange={handleChange}\r\n        addPerson={addPerson} numberInput={numberInput} />\r\n    </div>\r\n  )\r\n\r\n}\r\n\r\nexport default App","import personService from '../services/persons'\r\n\r\nexport const updatePersonsNumber = (updatedPerson, numberInput, persons, setPersons, setErrorMsg) => {\r\n    if (numberInput.length) {\r\n        const proceedToUpdate = window.confirm(\r\n            `${updatedPerson.name} is already added to the phonebook, replace the old number with the new one?`\r\n        )\r\n        if (proceedToUpdate) {\r\n            personService\r\n                .update(updatedPerson, numberInput)\r\n                .then(returnedPerson => {\r\n                    setPersons(persons.map(person => person.name !== updatedPerson.name ? person : returnedPerson))\r\n                })\r\n                .catch(error => {\r\n                    setErrorMsg({\r\n                        message: `Information of ${updatedPerson.name} has already been removed from server`,\r\n                        status: 'failure'\r\n                    })\r\n                })\r\n            setErrorMsg({ message: `Number of ${updatedPerson.name} changed succesfully`, status: 'update' })\r\n            setTimeout(() => {\r\n                setErrorMsg(null)\r\n            }, 5000)\r\n        } else {\r\n            return\r\n        }\r\n    } else {\r\n        setErrorMsg({ message: `Please give a phonenumber`, status: 'failure' })\r\n        setTimeout(() => {\r\n            setErrorMsg(null)\r\n        }, 5000)\r\n    }\r\n}\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport App from './App'\r\nimport './index.css'\r\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}